package one;

public class PolyBasic {	//상속, 캡슐화 다음으로 다형성 차례. 어렵대
/*
	다형성(polymorphism)
	상속과 함께 객체지향 개념의 중요한 특징 중의 하나.
	상속과 깊은 관계가 있다.
	
	객체지향 개념에서 다형성이란, '여러 가지 형태를 가질 수 있는 능력'을 의미한다.
	자바에서는 '한 타입의 참조 변수로 여러 타입의 객체를 참조할 수 있다' 라고 한다.
	다른 말로는 부모 클래스 타입의 참조 변수로 자식 클래스의 인스턴스를 참조할 수 있다라고 표현한다.
*/
	public static void main(String[] args) {
		
//		Tv와 captionTv 클래스가 서로 상속관계에 있을 경우,
//		다음과 같이 부모 클래스 타입의 참조 변수로 자식 클래스의 인스턴스를 참조하도록 하는 것이 가능하다.
		
		CaptionTv captionTv = new CaptionTv();
		Tv tv = new CaptionTv();			//이게 새로운 개념임. 원래 하나의 뉴에 하나의 공간만 담겼거든.
//		CaptionTv anotherCTv = new Tv();		이게 왜 안되냐면 자식이 부모한테 안 담기기 때문.(상속)
//												담길 수도 있는데 안 담길 수도 있으므로 IT에서는 안된다고 함.
//												자식은 호쌍새다. 부모 마음을 몰라
	}												
}
//		부모 타입의 참조 변수로 자식 타입의 인스턴스를 참조할 수 있다.
//		반대로 자식 타입의 참조 변수로 부모 타입의 인스턴스를 참조할 수는 없다.
//		참조 변수가 사용할 수 있는 멤버의 개수는 인스턴스의 멤버 개수보다 같거나 적어야 한다.