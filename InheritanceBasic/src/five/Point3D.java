package five;

public class Point3D extends Point{

	int x = 0;
	int y = 0;
	int z = 0;

	public Point3D() {
		this(7, 9, 11);			//super(); 이거 안 적어도 자동으로 붙여주고 있었음
								//현업에서는 이렇게 코드 안씀, 교육용
		System.out.println("Point3D 생성자로 왔음");
	}
	
	Point3D(int x, int y, int z){
		super(x, y);
		this.z = z;
	}

	String getLocation() {	//부모꺼랑 똑같은데 발전시켜서 덮어쓸 수 있다. 이거 많이 쓴다...차세대 개념?
		String str = "";
				
			str = "x : " + x +  ", y: " + y + ", z: " + z;
		
		return str;
	}

//얠 만들었다고 해서 부모가 생기는 것이 아님. 포인트까지 찾아갔을 때 비로소 뉴가 나를 만드는 것임. 본을 찾아야 내 정체성을 찾는 느낌?
	
	
	
	
	
	
	
}

/*
super란?
-자식 클래스에서 부모 클래스로부터 상속받은 멤버를 참조하는데 사용되는 참조변수이다.
-인스턴스 메서드에서만 사용가능

-주의: static 메서드는 인스턴스와 관련이 없다


super()
-부모 클래스의 생성자를 호출하는데 사용된다.

-생성자의 첫 줄에서 부모 클래스의 생성자를 호출해야 한다.
이유는 자식 클래스의 멤버가 부모 클래스의 멤버를 사용할 수도 있으므로
부모의 멤버들이 먼저 초기화 되어 있어야 하기 때문이다.

-Object 클래스를 제외한 모든 클래스의 생성자 첫 줄에는 생성자, this() 또는 super()를 호출해야 한다.
그렇지 않으면 컴파일러가 자동적으로 super()를 생성자의 첫 줄에 삽입한다.

Object
모든 클래스에 존재하는 부모 클래스
다른 말로 최상위 클래스라고 한다.		//객체 개념의 근본, 마더컴, 에이션트 원

*/




