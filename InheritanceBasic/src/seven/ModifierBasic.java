package seven;

public class ModifierBasic {
/*
	제어자(modifier)
	
	제어자란?
	클래스, 변수 또는 메서드의 선언부와 함께 사용되어 부가적인 의미를 부여한다.
	
	제어자의 종류는 크게 접근 제어자와 그 외의 제어자로 나눌 수 있다.
	
	-접근 제어자(access modifier)
	public, protected, default, private						//디폴트는 안씀. 정 쓰고 싶으면 프로텍티드까지만 쓰셈
	
	-접근 제어자는 한 번에 네가지 중 하나만 선택해서 사용할 수 있다.
	
	-접근 제어자를 사용하는 이유
		1.외부로부터 데이터를 보호하기 위해서
		2.외부에는 불필요한, 내부적으로만 사용됨, 부분적으로 감추기 위해서		//일종의 통제 느낌
	
	-그 외 제어자
	static, final, abstract, synchronized 등등
	
	static(사용되는 곳: 멤버 변수, 메서드)		//다른곳에 함께 사용될 수 있다
	클래스의, 공통적인
	
	final(사용되는 곳: 클래스, 멤버 변수, 메서드, 지역 변수)
	마지막의, 변경될 수 없는
	
	abstract(사용되는 곳: 클래스, 메서드)
	미완성의, 추상의
	

*/
}
